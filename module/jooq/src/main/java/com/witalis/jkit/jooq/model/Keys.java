/*
 * This file is generated by jOOQ.
 */
package com.witalis.jkit.jooq.model;


import com.witalis.jkit.jooq.model.tables.Planet;
import com.witalis.jkit.jooq.model.tables.PlanetAtmosphere;
import com.witalis.jkit.jooq.model.tables.PlanetAtmosphereMap;
import com.witalis.jkit.jooq.model.tables.PlanetAttribute;
import com.witalis.jkit.jooq.model.tables.PlanetMoon;
import com.witalis.jkit.jooq.model.tables.PlanetSystem;
import com.witalis.jkit.jooq.model.tables.records.PlanetAtmosphereMapRecord;
import com.witalis.jkit.jooq.model.tables.records.PlanetAtmosphereRecord;
import com.witalis.jkit.jooq.model.tables.records.PlanetAttributeRecord;
import com.witalis.jkit.jooq.model.tables.records.PlanetMoonRecord;
import com.witalis.jkit.jooq.model.tables.records.PlanetRecord;
import com.witalis.jkit.jooq.model.tables.records.PlanetSystemRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * astronomy.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PlanetRecord> PKP_ID = Internal.createUniqueKey(Planet.PLANET, DSL.name("pkp_id"), new TableField[] { Planet.PLANET.ID }, true);
    public static final UniqueKey<PlanetAtmosphereRecord> PKPT_ID = Internal.createUniqueKey(PlanetAtmosphere.PLANET_ATMOSPHERE, DSL.name("pkpt_id"), new TableField[] { PlanetAtmosphere.PLANET_ATMOSPHERE.ID }, true);
    public static final UniqueKey<PlanetAtmosphereMapRecord> PKPTM_ID = Internal.createUniqueKey(PlanetAtmosphereMap.PLANET_ATMOSPHERE_MAP, DSL.name("pkptm_id"), new TableField[] { PlanetAtmosphereMap.PLANET_ATMOSPHERE_MAP.PLANET_ID, PlanetAtmosphereMap.PLANET_ATMOSPHERE_MAP.ATMOSPHERE_ID }, true);
    public static final UniqueKey<PlanetAttributeRecord> PKPA_ID = Internal.createUniqueKey(PlanetAttribute.PLANET_ATTRIBUTE, DSL.name("pkpa_id"), new TableField[] { PlanetAttribute.PLANET_ATTRIBUTE.ID }, true);
    public static final UniqueKey<PlanetMoonRecord> PKPM_ID = Internal.createUniqueKey(PlanetMoon.PLANET_MOON, DSL.name("pkpm_id"), new TableField[] { PlanetMoon.PLANET_MOON.ID }, true);
    public static final UniqueKey<PlanetSystemRecord> PKPS_ID = Internal.createUniqueKey(PlanetSystem.PLANET_SYSTEM, DSL.name("pkps_id"), new TableField[] { PlanetSystem.PLANET_SYSTEM.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PlanetRecord, PlanetSystemRecord> PLANET__FKP_SYSTEM_ID = Internal.createForeignKey(Planet.PLANET, DSL.name("fkp_system_id"), new TableField[] { Planet.PLANET.SYSTEM_ID }, Keys.PKPS_ID, new TableField[] { PlanetSystem.PLANET_SYSTEM.ID }, true);
    public static final ForeignKey<PlanetAtmosphereMapRecord, PlanetAtmosphereRecord> PLANET_ATMOSPHERE_MAP__FKPTM_ATMOSPHERE_ID = Internal.createForeignKey(PlanetAtmosphereMap.PLANET_ATMOSPHERE_MAP, DSL.name("fkptm_atmosphere_id"), new TableField[] { PlanetAtmosphereMap.PLANET_ATMOSPHERE_MAP.ATMOSPHERE_ID }, Keys.PKPT_ID, new TableField[] { PlanetAtmosphere.PLANET_ATMOSPHERE.ID }, true);
    public static final ForeignKey<PlanetAtmosphereMapRecord, PlanetRecord> PLANET_ATMOSPHERE_MAP__FKPTM_PLANET_ID = Internal.createForeignKey(PlanetAtmosphereMap.PLANET_ATMOSPHERE_MAP, DSL.name("fkptm_planet_id"), new TableField[] { PlanetAtmosphereMap.PLANET_ATMOSPHERE_MAP.PLANET_ID }, Keys.PKP_ID, new TableField[] { Planet.PLANET.ID }, true);
    public static final ForeignKey<PlanetAttributeRecord, PlanetRecord> PLANET_ATTRIBUTE__FKPA_PLANET_ID = Internal.createForeignKey(PlanetAttribute.PLANET_ATTRIBUTE, DSL.name("fkpa_planet_id"), new TableField[] { PlanetAttribute.PLANET_ATTRIBUTE.PLANET_ID }, Keys.PKP_ID, new TableField[] { Planet.PLANET.ID }, true);
    public static final ForeignKey<PlanetMoonRecord, PlanetRecord> PLANET_MOON__FKPM_PLANET_ID = Internal.createForeignKey(PlanetMoon.PLANET_MOON, DSL.name("fkpm_planet_id"), new TableField[] { PlanetMoon.PLANET_MOON.PLANET_ID }, Keys.PKP_ID, new TableField[] { Planet.PLANET.ID }, true);
}
