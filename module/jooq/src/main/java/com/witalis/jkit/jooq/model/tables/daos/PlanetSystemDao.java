/*
 * This file is generated by jOOQ.
 */
package com.witalis.jkit.jooq.model.tables.daos;


import com.witalis.jkit.jooq.model.tables.PlanetSystem;
import com.witalis.jkit.jooq.model.tables.records.PlanetSystemRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * Entity representing planet system.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlanetSystemDao extends DAOImpl<PlanetSystemRecord, com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem, Long> {

    /**
     * Create a new PlanetSystemDao without any configuration
     */
    public PlanetSystemDao() {
        super(PlanetSystem.PLANET_SYSTEM, com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem.class);
    }

    /**
     * Create a new PlanetSystemDao with an attached configuration
     */
    public PlanetSystemDao(Configuration configuration) {
        super(PlanetSystem.PLANET_SYSTEM, com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem.class, configuration);
    }

    @Override
    public Long getId(com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PlanetSystem.PLANET_SYSTEM.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchById(Long... values) {
        return fetch(PlanetSystem.PLANET_SYSTEM.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem fetchOneById(Long value) {
        return fetchOne(PlanetSystem.PLANET_SYSTEM.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchOptionalById(Long value) {
        return fetchOptional(PlanetSystem.PLANET_SYSTEM.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(PlanetSystem.PLANET_SYSTEM.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchByName(String... values) {
        return fetch(PlanetSystem.PLANET_SYSTEM.NAME, values);
    }

    /**
     * Fetch records that have <code>age BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchRangeOfAge(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PlanetSystem.PLANET_SYSTEM.AGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>age IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchByAge(Long... values) {
        return fetch(PlanetSystem.PLANET_SYSTEM.AGE, values);
    }

    /**
     * Fetch records that have <code>stars BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchRangeOfStars(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PlanetSystem.PLANET_SYSTEM.STARS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>stars IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchByStars(Integer... values) {
        return fetch(PlanetSystem.PLANET_SYSTEM.STARS, values);
    }

    /**
     * Fetch records that have <code>location BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchRangeOfLocation(String lowerInclusive, String upperInclusive) {
        return fetchRange(PlanetSystem.PLANET_SYSTEM.LOCATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchByLocation(String... values) {
        return fetch(PlanetSystem.PLANET_SYSTEM.LOCATION, values);
    }

    /**
     * Fetch records that have <code>note BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchRangeOfNote(String lowerInclusive, String upperInclusive) {
        return fetchRange(PlanetSystem.PLANET_SYSTEM.NOTE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>note IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetSystem> fetchByNote(String... values) {
        return fetch(PlanetSystem.PLANET_SYSTEM.NOTE, values);
    }
}
