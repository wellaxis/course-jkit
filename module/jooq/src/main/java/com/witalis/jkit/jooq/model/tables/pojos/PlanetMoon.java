/*
 * This file is generated by jOOQ.
 */
package com.witalis.jkit.jooq.model.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;


/**
 * Entity representing planet moon.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlanetMoon implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long planetId;
    private String name;
    private BigDecimal distance;
    private BigDecimal radius;
    private String note;

    public PlanetMoon() {}

    public PlanetMoon(PlanetMoon value) {
        this.id = value.id;
        this.planetId = value.planetId;
        this.name = value.name;
        this.distance = value.distance;
        this.radius = value.radius;
        this.note = value.note;
    }

    public PlanetMoon(
        Long id,
        Long planetId,
        String name,
        BigDecimal distance,
        BigDecimal radius,
        String note
    ) {
        this.id = id;
        this.planetId = planetId;
        this.name = name;
        this.distance = distance;
        this.radius = radius;
        this.note = note;
    }

    /**
     * Getter for <code>astronomy.planet_moon.id</code>. Planet moon identifier.
     * Primary Key.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>astronomy.planet_moon.id</code>. Planet moon identifier.
     * Primary Key.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>astronomy.planet_moon.planet_id</code>. Owning planet
     * identifier. Foreign Key.
     */
    public Long getPlanetId() {
        return this.planetId;
    }

    /**
     * Setter for <code>astronomy.planet_moon.planet_id</code>. Owning planet
     * identifier. Foreign Key.
     */
    public void setPlanetId(Long planetId) {
        this.planetId = planetId;
    }

    /**
     * Getter for <code>astronomy.planet_moon.name</code>. Name of the planet
     * moon.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>astronomy.planet_moon.name</code>. Name of the planet
     * moon.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>astronomy.planet_moon.distance</code>. Distance of the
     * planet moon.
     */
    public BigDecimal getDistance() {
        return this.distance;
    }

    /**
     * Setter for <code>astronomy.planet_moon.distance</code>. Distance of the
     * planet moon.
     */
    public void setDistance(BigDecimal distance) {
        this.distance = distance;
    }

    /**
     * Getter for <code>astronomy.planet_moon.radius</code>. Radius of the
     * planet moon.
     */
    public BigDecimal getRadius() {
        return this.radius;
    }

    /**
     * Setter for <code>astronomy.planet_moon.radius</code>. Radius of the
     * planet moon.
     */
    public void setRadius(BigDecimal radius) {
        this.radius = radius;
    }

    /**
     * Getter for <code>astronomy.planet_moon.note</code>. Note of the planet
     * moon.
     */
    public String getNote() {
        return this.note;
    }

    /**
     * Setter for <code>astronomy.planet_moon.note</code>. Note of the planet
     * moon.
     */
    public void setNote(String note) {
        this.note = note;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PlanetMoon other = (PlanetMoon) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.planetId == null) {
            if (other.planetId != null)
                return false;
        }
        else if (!this.planetId.equals(other.planetId))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.distance == null) {
            if (other.distance != null)
                return false;
        }
        else if (!this.distance.equals(other.distance))
            return false;
        if (this.radius == null) {
            if (other.radius != null)
                return false;
        }
        else if (!this.radius.equals(other.radius))
            return false;
        if (this.note == null) {
            if (other.note != null)
                return false;
        }
        else if (!this.note.equals(other.note))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.planetId == null) ? 0 : this.planetId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.distance == null) ? 0 : this.distance.hashCode());
        result = prime * result + ((this.radius == null) ? 0 : this.radius.hashCode());
        result = prime * result + ((this.note == null) ? 0 : this.note.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PlanetMoon (");

        sb.append(id);
        sb.append(", ").append(planetId);
        sb.append(", ").append(name);
        sb.append(", ").append(distance);
        sb.append(", ").append(radius);
        sb.append(", ").append(note);

        sb.append(")");
        return sb.toString();
    }
}
