/*
 * This file is generated by jOOQ.
 */
package com.witalis.jkit.jooq.model.tables.records;


import com.witalis.jkit.jooq.model.tables.PlanetAtmosphere;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Entity representing planet atmosphere.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlanetAtmosphereRecord extends UpdatableRecordImpl<PlanetAtmosphereRecord> implements Record3<Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>astronomy.planet_atmosphere.id</code>. Planet atmosphere
     * identifier. Primary Key.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>astronomy.planet_atmosphere.id</code>. Planet atmosphere
     * identifier. Primary Key.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>astronomy.planet_atmosphere.name</code>. Name of the
     * planet atmosphere.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>astronomy.planet_atmosphere.name</code>. Name of the
     * planet atmosphere.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>astronomy.planet_atmosphere.note</code>. Note of the
     * planet atmosphere.
     */
    public void setNote(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>astronomy.planet_atmosphere.note</code>. Note of the
     * planet atmosphere.
     */
    public String getNote() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PlanetAtmosphere.PLANET_ATMOSPHERE.ID;
    }

    @Override
    public Field<String> field2() {
        return PlanetAtmosphere.PLANET_ATMOSPHERE.NAME;
    }

    @Override
    public Field<String> field3() {
        return PlanetAtmosphere.PLANET_ATMOSPHERE.NOTE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getNote();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getNote();
    }

    @Override
    public PlanetAtmosphereRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PlanetAtmosphereRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PlanetAtmosphereRecord value3(String value) {
        setNote(value);
        return this;
    }

    @Override
    public PlanetAtmosphereRecord values(Long value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlanetAtmosphereRecord
     */
    public PlanetAtmosphereRecord() {
        super(PlanetAtmosphere.PLANET_ATMOSPHERE);
    }

    /**
     * Create a detached, initialised PlanetAtmosphereRecord
     */
    public PlanetAtmosphereRecord(Long id, String name, String note) {
        super(PlanetAtmosphere.PLANET_ATMOSPHERE);

        setId(id);
        setName(name);
        setNote(note);
    }

    /**
     * Create a detached, initialised PlanetAtmosphereRecord
     */
    public PlanetAtmosphereRecord(com.witalis.jkit.jooq.model.tables.pojos.PlanetAtmosphere value) {
        super(PlanetAtmosphere.PLANET_ATMOSPHERE);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setNote(value.getNote());
        }
    }
}
