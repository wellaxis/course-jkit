/*
 * This file is generated by jOOQ.
 */
package com.witalis.jkit.jooq.model.tables.records;


import com.witalis.jkit.jooq.model.tables.PlanetAttribute;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Entity representing planet attribute.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlanetAttributeRecord extends UpdatableRecordImpl<PlanetAttributeRecord> implements Record11<Long, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>astronomy.planet_attribute.id</code>. Planet attribute
     * identifier. Primary Key.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.id</code>. Planet attribute
     * identifier. Primary Key.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>astronomy.planet_attribute.planet_id</code>. Owning
     * planet identifier. Foreign Key.
     */
    public void setPlanetId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.planet_id</code>. Owning
     * planet identifier. Foreign Key.
     */
    public Long getPlanetId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>astronomy.planet_attribute.diameter</code>. Diameter of
     * the planet.
     */
    public void setDiameter(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.diameter</code>. Diameter of
     * the planet.
     */
    public BigDecimal getDiameter() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>astronomy.planet_attribute.mass</code>. Mass of the
     * planet.
     */
    public void setMass(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.mass</code>. Mass of the
     * planet.
     */
    public BigDecimal getMass() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>astronomy.planet_attribute.axis</code>. Axis of the
     * planet.
     */
    public void setAxis(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.axis</code>. Axis of the
     * planet.
     */
    public BigDecimal getAxis() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>astronomy.planet_attribute.period</code>. Period of the
     * planet.
     */
    public void setPeriod(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.period</code>. Period of the
     * planet.
     */
    public BigDecimal getPeriod() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>astronomy.planet_attribute.inclination</code>.
     * Inclination of the planet.
     */
    public void setInclination(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.inclination</code>.
     * Inclination of the planet.
     */
    public BigDecimal getInclination() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>astronomy.planet_attribute.eccentricity</code>.
     * Eccentricity of the planet.
     */
    public void setEccentricity(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.eccentricity</code>.
     * Eccentricity of the planet.
     */
    public BigDecimal getEccentricity() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>astronomy.planet_attribute.rotation</code>. Rotation of
     * the planet.
     */
    public void setRotation(BigDecimal value) {
        set(8, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.rotation</code>. Rotation of
     * the planet.
     */
    public BigDecimal getRotation() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>astronomy.planet_attribute.moons</code>. Number of moons
     * of the planet.
     */
    public void setMoons(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.moons</code>. Number of moons
     * of the planet.
     */
    public Integer getMoons() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>astronomy.planet_attribute.rings</code>. Presence of
     * rings of the planet.
     */
    public void setRings(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>astronomy.planet_attribute.rings</code>. Presence of
     * rings of the planet.
     */
    public Boolean getRings() {
        return (Boolean) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Integer, Boolean> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Integer, Boolean> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PlanetAttribute.PLANET_ATTRIBUTE.ID;
    }

    @Override
    public Field<Long> field2() {
        return PlanetAttribute.PLANET_ATTRIBUTE.PLANET_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return PlanetAttribute.PLANET_ATTRIBUTE.DIAMETER;
    }

    @Override
    public Field<BigDecimal> field4() {
        return PlanetAttribute.PLANET_ATTRIBUTE.MASS;
    }

    @Override
    public Field<BigDecimal> field5() {
        return PlanetAttribute.PLANET_ATTRIBUTE.AXIS;
    }

    @Override
    public Field<BigDecimal> field6() {
        return PlanetAttribute.PLANET_ATTRIBUTE.PERIOD;
    }

    @Override
    public Field<BigDecimal> field7() {
        return PlanetAttribute.PLANET_ATTRIBUTE.INCLINATION;
    }

    @Override
    public Field<BigDecimal> field8() {
        return PlanetAttribute.PLANET_ATTRIBUTE.ECCENTRICITY;
    }

    @Override
    public Field<BigDecimal> field9() {
        return PlanetAttribute.PLANET_ATTRIBUTE.ROTATION;
    }

    @Override
    public Field<Integer> field10() {
        return PlanetAttribute.PLANET_ATTRIBUTE.MOONS;
    }

    @Override
    public Field<Boolean> field11() {
        return PlanetAttribute.PLANET_ATTRIBUTE.RINGS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPlanetId();
    }

    @Override
    public BigDecimal component3() {
        return getDiameter();
    }

    @Override
    public BigDecimal component4() {
        return getMass();
    }

    @Override
    public BigDecimal component5() {
        return getAxis();
    }

    @Override
    public BigDecimal component6() {
        return getPeriod();
    }

    @Override
    public BigDecimal component7() {
        return getInclination();
    }

    @Override
    public BigDecimal component8() {
        return getEccentricity();
    }

    @Override
    public BigDecimal component9() {
        return getRotation();
    }

    @Override
    public Integer component10() {
        return getMoons();
    }

    @Override
    public Boolean component11() {
        return getRings();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPlanetId();
    }

    @Override
    public BigDecimal value3() {
        return getDiameter();
    }

    @Override
    public BigDecimal value4() {
        return getMass();
    }

    @Override
    public BigDecimal value5() {
        return getAxis();
    }

    @Override
    public BigDecimal value6() {
        return getPeriod();
    }

    @Override
    public BigDecimal value7() {
        return getInclination();
    }

    @Override
    public BigDecimal value8() {
        return getEccentricity();
    }

    @Override
    public BigDecimal value9() {
        return getRotation();
    }

    @Override
    public Integer value10() {
        return getMoons();
    }

    @Override
    public Boolean value11() {
        return getRings();
    }

    @Override
    public PlanetAttributeRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord value2(Long value) {
        setPlanetId(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord value3(BigDecimal value) {
        setDiameter(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord value4(BigDecimal value) {
        setMass(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord value5(BigDecimal value) {
        setAxis(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord value6(BigDecimal value) {
        setPeriod(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord value7(BigDecimal value) {
        setInclination(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord value8(BigDecimal value) {
        setEccentricity(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord value9(BigDecimal value) {
        setRotation(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord value10(Integer value) {
        setMoons(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord value11(Boolean value) {
        setRings(value);
        return this;
    }

    @Override
    public PlanetAttributeRecord values(Long value1, Long value2, BigDecimal value3, BigDecimal value4, BigDecimal value5, BigDecimal value6, BigDecimal value7, BigDecimal value8, BigDecimal value9, Integer value10, Boolean value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlanetAttributeRecord
     */
    public PlanetAttributeRecord() {
        super(PlanetAttribute.PLANET_ATTRIBUTE);
    }

    /**
     * Create a detached, initialised PlanetAttributeRecord
     */
    public PlanetAttributeRecord(Long id, Long planetId, BigDecimal diameter, BigDecimal mass, BigDecimal axis, BigDecimal period, BigDecimal inclination, BigDecimal eccentricity, BigDecimal rotation, Integer moons, Boolean rings) {
        super(PlanetAttribute.PLANET_ATTRIBUTE);

        setId(id);
        setPlanetId(planetId);
        setDiameter(diameter);
        setMass(mass);
        setAxis(axis);
        setPeriod(period);
        setInclination(inclination);
        setEccentricity(eccentricity);
        setRotation(rotation);
        setMoons(moons);
        setRings(rings);
    }

    /**
     * Create a detached, initialised PlanetAttributeRecord
     */
    public PlanetAttributeRecord(com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute value) {
        super(PlanetAttribute.PLANET_ATTRIBUTE);

        if (value != null) {
            setId(value.getId());
            setPlanetId(value.getPlanetId());
            setDiameter(value.getDiameter());
            setMass(value.getMass());
            setAxis(value.getAxis());
            setPeriod(value.getPeriod());
            setInclination(value.getInclination());
            setEccentricity(value.getEccentricity());
            setRotation(value.getRotation());
            setMoons(value.getMoons());
            setRings(value.getRings());
        }
    }
}
