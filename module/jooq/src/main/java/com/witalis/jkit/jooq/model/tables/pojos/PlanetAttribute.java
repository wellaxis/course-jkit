/*
 * This file is generated by jOOQ.
 */
package com.witalis.jkit.jooq.model.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;


/**
 * Entity representing planet attribute.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlanetAttribute implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long planetId;
    private BigDecimal diameter;
    private BigDecimal mass;
    private BigDecimal axis;
    private BigDecimal period;
    private BigDecimal inclination;
    private BigDecimal eccentricity;
    private BigDecimal rotation;
    private Integer moons;
    private Boolean rings;

    public PlanetAttribute() {}

    public PlanetAttribute(PlanetAttribute value) {
        this.id = value.id;
        this.planetId = value.planetId;
        this.diameter = value.diameter;
        this.mass = value.mass;
        this.axis = value.axis;
        this.period = value.period;
        this.inclination = value.inclination;
        this.eccentricity = value.eccentricity;
        this.rotation = value.rotation;
        this.moons = value.moons;
        this.rings = value.rings;
    }

    public PlanetAttribute(
        Long id,
        Long planetId,
        BigDecimal diameter,
        BigDecimal mass,
        BigDecimal axis,
        BigDecimal period,
        BigDecimal inclination,
        BigDecimal eccentricity,
        BigDecimal rotation,
        Integer moons,
        Boolean rings
    ) {
        this.id = id;
        this.planetId = planetId;
        this.diameter = diameter;
        this.mass = mass;
        this.axis = axis;
        this.period = period;
        this.inclination = inclination;
        this.eccentricity = eccentricity;
        this.rotation = rotation;
        this.moons = moons;
        this.rings = rings;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.id</code>. Planet attribute
     * identifier. Primary Key.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.id</code>. Planet attribute
     * identifier. Primary Key.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.planet_id</code>. Owning
     * planet identifier. Foreign Key.
     */
    public Long getPlanetId() {
        return this.planetId;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.planet_id</code>. Owning
     * planet identifier. Foreign Key.
     */
    public void setPlanetId(Long planetId) {
        this.planetId = planetId;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.diameter</code>. Diameter of
     * the planet.
     */
    public BigDecimal getDiameter() {
        return this.diameter;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.diameter</code>. Diameter of
     * the planet.
     */
    public void setDiameter(BigDecimal diameter) {
        this.diameter = diameter;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.mass</code>. Mass of the
     * planet.
     */
    public BigDecimal getMass() {
        return this.mass;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.mass</code>. Mass of the
     * planet.
     */
    public void setMass(BigDecimal mass) {
        this.mass = mass;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.axis</code>. Axis of the
     * planet.
     */
    public BigDecimal getAxis() {
        return this.axis;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.axis</code>. Axis of the
     * planet.
     */
    public void setAxis(BigDecimal axis) {
        this.axis = axis;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.period</code>. Period of the
     * planet.
     */
    public BigDecimal getPeriod() {
        return this.period;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.period</code>. Period of the
     * planet.
     */
    public void setPeriod(BigDecimal period) {
        this.period = period;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.inclination</code>.
     * Inclination of the planet.
     */
    public BigDecimal getInclination() {
        return this.inclination;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.inclination</code>.
     * Inclination of the planet.
     */
    public void setInclination(BigDecimal inclination) {
        this.inclination = inclination;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.eccentricity</code>.
     * Eccentricity of the planet.
     */
    public BigDecimal getEccentricity() {
        return this.eccentricity;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.eccentricity</code>.
     * Eccentricity of the planet.
     */
    public void setEccentricity(BigDecimal eccentricity) {
        this.eccentricity = eccentricity;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.rotation</code>. Rotation of
     * the planet.
     */
    public BigDecimal getRotation() {
        return this.rotation;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.rotation</code>. Rotation of
     * the planet.
     */
    public void setRotation(BigDecimal rotation) {
        this.rotation = rotation;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.moons</code>. Number of moons
     * of the planet.
     */
    public Integer getMoons() {
        return this.moons;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.moons</code>. Number of moons
     * of the planet.
     */
    public void setMoons(Integer moons) {
        this.moons = moons;
    }

    /**
     * Getter for <code>astronomy.planet_attribute.rings</code>. Presence of
     * rings of the planet.
     */
    public Boolean getRings() {
        return this.rings;
    }

    /**
     * Setter for <code>astronomy.planet_attribute.rings</code>. Presence of
     * rings of the planet.
     */
    public void setRings(Boolean rings) {
        this.rings = rings;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PlanetAttribute other = (PlanetAttribute) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.planetId == null) {
            if (other.planetId != null)
                return false;
        }
        else if (!this.planetId.equals(other.planetId))
            return false;
        if (this.diameter == null) {
            if (other.diameter != null)
                return false;
        }
        else if (!this.diameter.equals(other.diameter))
            return false;
        if (this.mass == null) {
            if (other.mass != null)
                return false;
        }
        else if (!this.mass.equals(other.mass))
            return false;
        if (this.axis == null) {
            if (other.axis != null)
                return false;
        }
        else if (!this.axis.equals(other.axis))
            return false;
        if (this.period == null) {
            if (other.period != null)
                return false;
        }
        else if (!this.period.equals(other.period))
            return false;
        if (this.inclination == null) {
            if (other.inclination != null)
                return false;
        }
        else if (!this.inclination.equals(other.inclination))
            return false;
        if (this.eccentricity == null) {
            if (other.eccentricity != null)
                return false;
        }
        else if (!this.eccentricity.equals(other.eccentricity))
            return false;
        if (this.rotation == null) {
            if (other.rotation != null)
                return false;
        }
        else if (!this.rotation.equals(other.rotation))
            return false;
        if (this.moons == null) {
            if (other.moons != null)
                return false;
        }
        else if (!this.moons.equals(other.moons))
            return false;
        if (this.rings == null) {
            if (other.rings != null)
                return false;
        }
        else if (!this.rings.equals(other.rings))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.planetId == null) ? 0 : this.planetId.hashCode());
        result = prime * result + ((this.diameter == null) ? 0 : this.diameter.hashCode());
        result = prime * result + ((this.mass == null) ? 0 : this.mass.hashCode());
        result = prime * result + ((this.axis == null) ? 0 : this.axis.hashCode());
        result = prime * result + ((this.period == null) ? 0 : this.period.hashCode());
        result = prime * result + ((this.inclination == null) ? 0 : this.inclination.hashCode());
        result = prime * result + ((this.eccentricity == null) ? 0 : this.eccentricity.hashCode());
        result = prime * result + ((this.rotation == null) ? 0 : this.rotation.hashCode());
        result = prime * result + ((this.moons == null) ? 0 : this.moons.hashCode());
        result = prime * result + ((this.rings == null) ? 0 : this.rings.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PlanetAttribute (");

        sb.append(id);
        sb.append(", ").append(planetId);
        sb.append(", ").append(diameter);
        sb.append(", ").append(mass);
        sb.append(", ").append(axis);
        sb.append(", ").append(period);
        sb.append(", ").append(inclination);
        sb.append(", ").append(eccentricity);
        sb.append(", ").append(rotation);
        sb.append(", ").append(moons);
        sb.append(", ").append(rings);

        sb.append(")");
        return sb.toString();
    }
}
