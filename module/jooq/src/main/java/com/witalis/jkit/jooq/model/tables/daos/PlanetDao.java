/*
 * This file is generated by jOOQ.
 */
package com.witalis.jkit.jooq.model.tables.daos;


import com.witalis.jkit.jooq.model.enums.PlanetType;
import com.witalis.jkit.jooq.model.tables.Planet;
import com.witalis.jkit.jooq.model.tables.records.PlanetRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * Entity representing planet.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlanetDao extends DAOImpl<PlanetRecord, com.witalis.jkit.jooq.model.tables.pojos.Planet, Long> {

    /**
     * Create a new PlanetDao without any configuration
     */
    public PlanetDao() {
        super(Planet.PLANET, com.witalis.jkit.jooq.model.tables.pojos.Planet.class);
    }

    /**
     * Create a new PlanetDao with an attached configuration
     */
    public PlanetDao(Configuration configuration) {
        super(Planet.PLANET, com.witalis.jkit.jooq.model.tables.pojos.Planet.class, configuration);
    }

    @Override
    public Long getId(com.witalis.jkit.jooq.model.tables.pojos.Planet object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Planet.PLANET.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchById(Long... values) {
        return fetch(Planet.PLANET.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.witalis.jkit.jooq.model.tables.pojos.Planet fetchOneById(Long value) {
        return fetchOne(Planet.PLANET.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchOptionalById(Long value) {
        return fetchOptional(Planet.PLANET.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Planet.PLANET.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchByName(String... values) {
        return fetch(Planet.PLANET.NAME, values);
    }

    /**
     * Fetch records that have <code>system_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchRangeOfSystemId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Planet.PLANET.SYSTEM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>system_id IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchBySystemId(Long... values) {
        return fetch(Planet.PLANET.SYSTEM_ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchRangeOfType(PlanetType lowerInclusive, PlanetType upperInclusive) {
        return fetchRange(Planet.PLANET.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchByType(PlanetType... values) {
        return fetch(Planet.PLANET.TYPE, values);
    }

    /**
     * Fetch records that have <code>sign BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchRangeOfSign(String lowerInclusive, String upperInclusive) {
        return fetchRange(Planet.PLANET.SIGN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sign IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchBySign(String... values) {
        return fetch(Planet.PLANET.SIGN, values);
    }

    /**
     * Fetch records that have <code>note BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchRangeOfNote(String lowerInclusive, String upperInclusive) {
        return fetchRange(Planet.PLANET.NOTE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>note IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.Planet> fetchByNote(String... values) {
        return fetch(Planet.PLANET.NOTE, values);
    }
}
