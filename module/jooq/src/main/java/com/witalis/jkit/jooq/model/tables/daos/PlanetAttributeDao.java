/*
 * This file is generated by jOOQ.
 */
package com.witalis.jkit.jooq.model.tables.daos;


import com.witalis.jkit.jooq.model.tables.PlanetAttribute;
import com.witalis.jkit.jooq.model.tables.records.PlanetAttributeRecord;

import java.math.BigDecimal;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * Entity representing planet attribute.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlanetAttributeDao extends DAOImpl<PlanetAttributeRecord, com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute, Long> {

    /**
     * Create a new PlanetAttributeDao without any configuration
     */
    public PlanetAttributeDao() {
        super(PlanetAttribute.PLANET_ATTRIBUTE, com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute.class);
    }

    /**
     * Create a new PlanetAttributeDao with an attached configuration
     */
    public PlanetAttributeDao(Configuration configuration) {
        super(PlanetAttribute.PLANET_ATTRIBUTE, com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute.class, configuration);
    }

    @Override
    public Long getId(com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchById(Long... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute fetchOneById(Long value) {
        return fetchOne(PlanetAttribute.PLANET_ATTRIBUTE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchOptionalById(Long value) {
        return fetchOptional(PlanetAttribute.PLANET_ATTRIBUTE.ID, value);
    }

    /**
     * Fetch records that have <code>planet_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfPlanetId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.PLANET_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>planet_id IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchByPlanetId(Long... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.PLANET_ID, values);
    }

    /**
     * Fetch records that have <code>diameter BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfDiameter(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.DIAMETER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>diameter IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchByDiameter(BigDecimal... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.DIAMETER, values);
    }

    /**
     * Fetch records that have <code>mass BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfMass(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.MASS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mass IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchByMass(BigDecimal... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.MASS, values);
    }

    /**
     * Fetch records that have <code>axis BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfAxis(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.AXIS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>axis IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchByAxis(BigDecimal... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.AXIS, values);
    }

    /**
     * Fetch records that have <code>period BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfPeriod(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.PERIOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>period IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchByPeriod(BigDecimal... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.PERIOD, values);
    }

    /**
     * Fetch records that have <code>inclination BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfInclination(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.INCLINATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inclination IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchByInclination(BigDecimal... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.INCLINATION, values);
    }

    /**
     * Fetch records that have <code>eccentricity BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfEccentricity(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.ECCENTRICITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>eccentricity IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchByEccentricity(BigDecimal... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.ECCENTRICITY, values);
    }

    /**
     * Fetch records that have <code>rotation BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfRotation(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.ROTATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rotation IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchByRotation(BigDecimal... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.ROTATION, values);
    }

    /**
     * Fetch records that have <code>moons BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfMoons(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.MOONS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>moons IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchByMoons(Integer... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.MOONS, values);
    }

    /**
     * Fetch records that have <code>rings BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchRangeOfRings(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PlanetAttribute.PLANET_ATTRIBUTE.RINGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rings IN (values)</code>
     */
    public List<com.witalis.jkit.jooq.model.tables.pojos.PlanetAttribute> fetchByRings(Boolean... values) {
        return fetch(PlanetAttribute.PLANET_ATTRIBUTE.RINGS, values);
    }
}
