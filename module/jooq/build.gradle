// script
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.jooq:jooq:3.+'
        classpath 'org.jooq:jooq-meta:3.+'
        classpath 'org.jooq:jooq-codegen:3.+'
        classpath 'org.postgresql:postgresql:42.+'
    }
}

// plugin
plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'net.nemerosa.versioning' version '3.0.0'
    id 'org.sonarqube' version '3.3'
}

// application
mainClassName = 'com.witalis.jkit.jooq.JkitJooqApplication'

// extension
ext {
    groupId = 'jooq'
    moduleId = 'com.witalis.jkit.jooq'
}

// repository
repositories {
    mavenLocal()
    mavenCentral()
}

// dependency
dependencies {
    // database
    implementation 'org.postgresql:postgresql:42.+'
    implementation 'com.zaxxer:HikariCP:5.+'
    implementation "com.h2database:h2:2.+"
    implementation 'org.jooq:jooq:3.+'
    implementation 'org.jooq:jooq-meta:3.+'
    implementation 'org.jooq:jooq-codegen:3.+'
    // boot
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    // others
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

ext.jooq = [
    generator: 'org.jooq.codegen.DefaultGenerator',
    strategy: 'org.jooq.codegen.DefaultGeneratorStrategy',
    driver: 'org.postgresql.Driver',
    url: 'jdbc:postgresql://localhost:5432/jooq',
    user: 'jooq',
    password: 'jooq',
    schema: 'astronomy',
    name: 'org.jooq.meta.postgres.PostgresDatabase',
    directory: projectDir.toString() + '/src/main/java',
    package: 'com.witalis.jkit.jooq.model',
    generate: false
]

import org.jooq.codegen.GenerationTool
import org.jooq.meta.jaxb.*

task jooqGenerate() {

    Configuration configuration = new Configuration()
        .withJdbc(
            new Jdbc()
                .withDriver(jooq.driver)
                .withUrl(jooq.url)
                .withUser(jooq.user)
                .withPassword(jooq.password)
        )
        .withGenerator(
            new Generator()
                .withName(jooq.generator)
                .withStrategy(
                    new Strategy()
                        .withName(jooq.strategy)
                )
                .withDatabase(
                    new Database()
                        .withName(jooq.name)
                        .withIncludes(".*")
                        .withExcludes("")
                        .withInputSchema(jooq.schema)
                )
                .withGenerate(
                    new Generate()
                        .withPojos(true)
                        .withDaos(true)
                )
                .withTarget(
                    new Target()
                        .withDirectory(jooq.directory)
                        .withPackageName(jooq.package)
                )
        );

    if (jooq.generate) {
        GenerationTool.generate(configuration)
    }
}

task jooqCleaning(type: Delete) {
    delete projectDir.toString() + '/src/main/java/com/witalis/jkit/jooq/model'
}
